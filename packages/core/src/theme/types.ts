function asLiterals<T extends string>(array: T[]): T[] {
  return array
}

const backgroundTokens = asLiterals([
  'base',
  'muted',
  'popup',
  'popover',
  'modal',
  'overlay',
  'container',
  'header',
  'sidebar',
  'topbar',
  'action.neutral.ghost',
  'action.neutral.ghostHover',
  'action.neutral.ghostPressed',
  'action.neutral.ghostDisabled',
  'action.main.solid',
  'action.main.solidHover',
  'action.main.solidPressed',
  'action.main.solidDisabled',
  'action.main.soft',
  'action.main.softHover',
  'action.main.softPressed',
  'action.main.softDisabled',
  'action.main.text',
  'action.main.textHover',
  'action.main.textPressed',
  'action.main.textDisabled',
  'action.critical.solid',
  'action.critical.solidHover',
  'action.critical.solidPressed',
  'action.critical.solidDisabled',
  'action.critical.soft',
  'action.critical.softHover',
  'action.critical.softPressed',
  'action.critical.softDisabled',
  'action.critical.text',
  'action.critical.textHover',
  'action.critical.textPressed',
  'action.critical.textDisabled',
  'listBoxItem.main',
  'listBoxItem.mainHover',
  'listBoxItem.mainPressed',
  'listBoxItem.mainSelected',
  'listBoxItem.critical',
  'listBoxItem.criticalHover',
  'listBoxItem.criticalPressed',
  'listBoxItem.criticalSelected',
  'notification.warning',
  'notification.positive',
  'notification.info',
  'notification.critical',
  'field.neutral',
  'field.neutralHover',
  'field.neutralFocus',
  'field.neutralDisabled',
  'field.critical',
  'field.criticalHover',
  'field.criticalFocus',
  'field.criticalDisabled',
  'control.neutral',
  'control.neutralHover',
  'control.neutralPressed',
  'control.neutralDisabled',
  'control.neutralChecked',
  'control.neutralCheckedHover',
  'control.neutralCheckedPressed',
  'control.neutralCheckedDisabled',
  'control.neutralIndeterminate',
  'control.neutralIndeterminateHover',
  'control.neutralIndeterminatePressed',
  'control.neutralIndeterminateDisabled',
])

const foregroundTokens = asLiterals([
  'base',
  'muted',
  'highlight',
  'popup',
  'popover',
  'modal',
  'container',
  'header',
  'sidebar',
  'topbar',
  'action.neutral.ghost',
  'action.neutral.ghostDisabled',
  'action.main.solid',
  'action.main.solidDisabled',
  'action.main.soft',
  'action.main.softDisabled',
  'action.main.text',
  'action.main.textDisabled',
  'action.critical.solid',
  'action.critical.solidDisabled',
  'action.critical.soft',
  'action.critical.softDisabled',
  'action.critical.text',
  'action.critical.textDisabled',
  'listBoxItem.main',
  'listBoxItem.mainHover',
  'listBoxItem.mainPressed',
  'listBoxItem.mainSelected',
  'listBoxItem.critical',
  'listBoxItem.criticalHover',
  'listBoxItem.criticalPressed',
  'listBoxItem.criticalSelected',
  'link',
  'linkHover',
  'linkVisited',
  'notification.positive',
  'notification.info',
  'notification.critical',
  'notification.warning',
  'control.neutral',
  'control.neutralDisabled',
  'control.neutralChecked',
  'control.neutralCheckedDisabled',
  'control.neutralIndeterminate',
  'control.neutralIndeterminateDisabled',
])

const borderColorTokens = asLiterals([
  'base',
  'popover',
  'modal',
  'container',
  'header',
  'sidebar',
  'topbar',
  'field.neutral',
  'field.neutralHover',
  'field.neutralFocus',
  'field.neutralDisabled',
  'field.critical',
  'field.criticalHover',
  'field.criticalFocus',
  'field.criticalDisabled',
  'control.neutral',
  'control.neutralHover',
  'control.neutralPressed',
  'control.neutralDisabled',
  'control.neutralChecked',
  'control.neutralCheckedHover',
  'control.neutralCheckedPressed',
  'control.neutralCheckedDisabled',
  'control.neutralIndeterminate',
  'control.neutralIndeterminateHover',
  'control.neutralIndeterminatePressed',
  'control.neutralIndeterminateDisabled',
  'notification.positive',
  'notification.info',
  'notification.critical',
  'notification.warning',
])

const boxShadowTokens = asLiterals([
  'ring.critical',
  'ring.warning',
  'ring.positive',
  'ring.neutral',
  'ring.info',
  'ring.main',
  'ring.menu',
  'ring.subtle',
])

const colorTokens = asLiterals([
  'white',
  'black',
  'blue05',
  'blue10',
  'blue20',
  'blue30',
  'blue40',
  'blue50',
  'blue60',
  'red05',
  'red10',
  'red20',
  'red30',
  'red40',
  'red50',
  'red60',
  'lightBlue05',
  'lightBlue10',
  'lightBlue20',
  'lightBlue30',
  'lightBlue40',
  'lightBlue50',
  'lightBlue60',
  'orange05',
  'orange10',
  'orange20',
  'orange30',
  'orange40',
  'orange50',
  'orange60',
  'cyan05',
  'cyan10',
  'cyan20',
  'cyan30',
  'cyan40',
  'cyan50',
  'cyan60',
  'pink05',
  'pink10',
  'pink20',
  'pink30',
  'pink40',
  'pink50',
  'pink60',
  'grey10',
  'grey20',
  'grey30',
  'grey40',
  'grey50',
  'grey60',
  'grey70',
  'grey80',
  'green05',
  'green10',
  'green20',
  'green30',
  'green40',
  'green50',
  'green60',
  'teal05',
  'teal10',
  'teal20',
  'teal30',
  'teal40',
  'teal50',
  'teal60',
  'purple05',
  'purple10',
  'purple20',
  'purple30',
  'purple40',
  'purple50',
  'purple60',
  'greyTransparent05',
  'greyTransparent10',
  'greyTransparent20',
  'greyTransparent30',
  'greyTransparent40',
  'greyTransparent50',
  'greyTransparent60',
  'greyTransparent70',
  'greyTransparent80',
  'greyTransparent90',
])

export type ColorTokens = typeof colorTokens[number]
export type ForegroundTokens = typeof foregroundTokens[number]
export type BackgroundTokens = typeof backgroundTokens[number]
export type BorderColorTokens = typeof borderColorTokens[number]
export type BoxShadowTokens = typeof boxShadowTokens[number]
