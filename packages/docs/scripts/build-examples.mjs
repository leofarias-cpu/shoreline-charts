import fse from 'fs-extra'
import path from 'node:path'
import { codeToHtml } from 'shiki'
import { format } from 'prettier'

const inputDirectory = `${path.dirname('')}/examples`
const outputDirectory = `${path.dirname('')}/__examples__`
const outputFile = 'index.ts'

let tsCode = `
// This file is autogenerated by scripts/build-examples.mjs
// Do not edit this file directly.
import React from "react"

export default {
`

/**
 * This script generates the code previews for all files on examples/ folder.
 * For example, imagine an exampels folder with this structure:
 *
 * ```md
 * /examples
 *  - component.tsx
 *  - component-variants.tsx
 * ```
 *
 * This generates a new index.ts file insides the `/__examples__` folder:
 *
 * /__examples__/index.ts
 * ```js
 * default {
 *  'component': {
 *    component: React.lazy(() => import('../examples/component')),
 *    code: '' // the formatted of component.tsx as string,
 *    preview: '' // the shiki.js html preview as string
 *  },
 *  'component-variants': {
 *    component: React.lazy(() => import('../examples/component-variants')),
 *    code: '' // the formatted of component-variants.tsx as string,
 *    preview: '' // the shiki.js html preview as string
 *  }
 * }
 * ```
 *
 * The Preview components looks for this generated file.
 * In Mdx, get the preview is quite simple:
 *
 * @example
 * <Preview name="component" />
 * <Preview name="component-variants" />
 */
async function main() {
  fse.removeSync(outputDirectory)
  const files = fse.readdirSync(inputDirectory)

  const codePromises = files.map((file) => {
    const fileBuffer = fse.readFileSync(`${inputDirectory}/${file}`)
    const code = fileBuffer.toString()

    return format(code, {
      parser: 'typescript',
      semi: false,
      singleQuote: true,
    })
  })

  // get all codes formated
  const codes = await Promise.all(codePromises)

  const previewPromises = codes.map((code) => {
    return codeToHtml(code, {
      lang: 'tsx',
      theme: 'dracula',
      mergeWhitespaces: false,
    })
  })

  // generate all code previews w/ shiki.js
  const previews = await Promise.all(previewPromises)

  for (const i in files) {
    const file = files[i]
    const fileName = file.split('.')[0]

    tsCode += `
      "${fileName}": {
        component: React.lazy(() => import('../examples/${fileName}')),
        code: \`${codes[i]}\`,
        preview: \`${previews[i]}\`,
      },
      `
  }

  tsCode += '}'

  const formattedTsCode = await format(tsCode, {
    parser: 'typescript',
    semi: false,
    singleQuote: true,
  })

  fse.outputFile(`${outputDirectory}/${outputFile}`, formattedTsCode, (err) => {
    if (err) {
      console.log(err)
    } else {
      console.log('âœ… Examples generated')
    }
  })
}

main()
