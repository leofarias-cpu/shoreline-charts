name: CD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Shoreline
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      storybookUrl: ${{ steps.publish-to-chromatic.outputs.storybookUrl }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.VTEX_GITHUB_BOT_TOKEN }}
          fetch-depth: 25

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure CI Git User
        run: bash ./scripts/configure-git-user.sh
        env:
          GIT_USERS: ${{ secrets.GIT_USERS }}
          GIT_EMAILS: ${{ secrets.GIT_EMAILS }}

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            **/dist
            !**/node_modules
          retention-days: 1

      - name: Test
        run: pnpm test

      - name: Publish to Chromatic
        id: publish-to-chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: build:storybook:ci
          exitOnceUploaded: true
          exitZeroOnChanges: true

      - name: Publish
        run: |
          if git log -1 --pretty=%B | grep -q "\[skip-ci\]"; then
            exit 0
          fi
          pnpm lerna publish --preid rc --dist-tag rc --yes --force-publish --no-verify-access
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          HUSKY: 0

  docs:
    name: Docs generator
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.VTEX_GITHUB_BOT_TOKEN }}
          fetch-depth: 25

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure CI Git User
        run: bash ./scripts/configure-git-user.sh
        env:
          GIT_USERS: ${{ secrets.GIT_USERS }}
          GIT_EMAILS: ${{ secrets.GIT_EMAILS }}

      - name: Install dependencies
        run: pnpm install

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Generate Documentation
        env:
          STORYBOOK_URL: ${{needs.build.outputs.storybookUrl}}
        run: |
          if git log -1 --pretty=%B | grep -q "\[skip-ci\]"; then
            exit 0
          fi
          git pull --rebase
          pnpm run gen:docs
          git add ./packages/docs
          git commit -m "docs: generate documentation from $GITHUB_SHA [skip-ci]" --allow-empty
          git push -u origin main --force
